name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - "**"

env:
  MIX_ENV: test

jobs:
  deps:
    runs-on: ubuntu-latest
    name: Dependencies

    strategy:
      matrix:
        elixir: ["1.13.2"]
        otp: ["24.2.1"]

    steps:
      - uses: actions/checkout@v2

      - uses: erlef/setup-beam@v1
        with:
          otp-version: ${{matrix.otp}}
          elixir-version: ${{matrix.elixir}}

      - name: Restore dependencies cache
        uses: actions/cache@v2
        with:
          path: deps
          key: ${{runner.os}}-mix-${{matrix.otp}}-${{matrix.elixir}}-${{hashFiles('**/mix.lock')}}
          restore-keys: ${{runner.os}}-mix-

      - name: Restore build cache
        uses: actions/cache@v2
        with:
          path: _build
          key: ${{runner.os}}-build-${{matrix.otp}}-${{matrix.elixir}}-${{hashFiles('**/mix.lock')}}

      - name: Install Dependencies
        run: mix deps.get

      - name: Compile app
        run: mix compile --force --warnings-as-errors

  assets:
    name: Frontend Assets
    needs: deps
    runs-on: ubuntu-latest

    strategy:
      matrix:
        elixir: ["1.13.2"]
        otp: ["24.2.1"]
        node: ["14.13.1"]

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v1
        with:
          node-version: ${{matrix.node}}

      - name: Restore dependencies cache
        uses: actions/cache@v2
        with:
          path: deps
          key: ${{runner.os}}-mix-${{matrix.otp}}-${{matrix.elixir}}-${{hashFiles('**/mix.lock')}}
          restore-keys: ${{runner.os}}-mix-

      - name: Restore NPM cache
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{runner.os}}-npm-${{matrix.node}}-${{hashFiles(format('**/assets/package-lock.json'))}}
          restore-keys: ${{runner.os}}-npm-

      - name: Install Node dependencies
        run: npm --prefix assets ci
      - run: npx prettier --check .
        working-directory: ./assets
      - run: npx stylelint "css/*"
        working-directory: ./assets
      - run: npx eslint js --ext .js,.jsx,.ts,.tsx
        working-directory: ./assets
      - run: npm run deploy
        env:
          NODE_ENV: production
        working-directory: ./assets

  lint:
    name: Lint
    needs: deps
    runs-on: ubuntu-latest

    strategy:
      matrix:
        elixir: ["1.13.2"]
        otp: ["24.2.1"]

    steps:
      - uses: actions/checkout@v2

      - uses: erlef/setup-beam@v1
        with:
          otp-version: ${{matrix.otp}}
          elixir-version: ${{matrix.elixir}}

      - name: Restore dependencies cache
        uses: actions/cache@v2
        with:
          path: deps
          key: ${{runner.os}}-mix-${{matrix.otp}}-${{matrix.elixir}}-${{hashFiles('**/mix.lock')}}
          restore-keys: ${{runner.os}}-mix-

      - name: Restore build cache
        uses: actions/cache@v2
        with:
          path: _build
          key: ${{runner.os}}-build-${{matrix.otp}}-${{matrix.elixir}}-${{hashFiles('**/mix.lock')}}

      - run: mix format --check-formatted
      - run: mix credo
      - run: mix sobelow --config

  dialyzer:
    name: Dialyzer
    needs: deps
    runs-on: ubuntu-latest

    strategy:
      matrix:
        elixir: ["1.13.2"]
        otp: ["24.2.1"]

    steps:
      - uses: actions/checkout@v2

      - uses: erlef/setup-beam@v1
        with:
          otp-version: ${{matrix.otp}}
          elixir-version: ${{matrix.elixir}}

      - name: Restore dependencies cache
        uses: actions/cache@v2
        with:
          path: deps
          key: ${{runner.os}}-mix-${{matrix.otp}}-${{matrix.elixir}}-${{hashFiles('**/mix.lock')}}
          restore-keys: ${{runner.os}}-mix-

      - name: Restore build cache
        uses: actions/cache@v2
        with:
          path: _build
          key: ${{runner.os}}-build-${{matrix.otp}}-${{matrix.elixir}}-${{hashFiles('**/mix.lock')}}

      - name: Restore PLT cache
        uses: actions/cache@v2
        id: plt-cache
        with:
          path: priv/plts
          key: ${{runner.os}}-plts-${{matrix.otp}}-${{matrix.elixir}}-${{hashFiles('**/mix.lock')}}

      - name: Create PLTs
        if: steps.plt-cache.outputs.cache-hit != 'true'
        run: |
          mkdir -p priv/plts
          mix dialyzer --plt

      - run: mix dialyzer --no-check --format short

  test:
    name: Tests
    needs: deps
    runs-on: ubuntu-latest

    env:
      DATABASE_URL: ecto://postgres:newaperio@localhost/phoenix_starter_test

    strategy:
      matrix:
        elixir: ["1.13.2"]
        otp: ["24.2.1"]

    services:
      db:
        image: postgres:12
        env:
          POSTGRES_DB: phoenix_starter_test
          POSTGRES_PASSWORD: newaperio
          POSTGRES_USER: postgres
        ports: ["5432:5432"]
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v2

      - uses: erlef/setup-beam@v1
        with:
          otp-version: ${{matrix.otp}}
          elixir-version: ${{matrix.elixir}}

      - name: Restore dependencies cache
        uses: actions/cache@v2
        with:
          path: deps
          key: ${{runner.os}}-mix-${{matrix.otp}}-${{matrix.elixir}}-${{hashFiles('**/mix.lock')}}
          restore-keys: ${{runner.os}}-mix-

      - name: Restore build cache
        uses: actions/cache@v2
        with:
          path: _build
          key: ${{runner.os}}-build-${{matrix.otp}}-${{matrix.elixir}}-${{hashFiles('**/mix.lock')}}

      - run: mix test
